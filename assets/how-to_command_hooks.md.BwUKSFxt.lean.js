import{_ as e,c as h,o as p,ae as l,j as i,a,t}from"./chunks/framework.Bi6zybwU.js";const F=JSON.parse('{"title":"Command Hooks","description":"","frontmatter":{},"headers":[],"relativePath":"how-to/command_hooks.md","filePath":"how-to/command_hooks.md"}'),k={name:"how-to/command_hooks.md"};function o(n,s,d,E,r,u){return p(),h("div",null,[s[16]||(s[16]=l("",12)),i("ul",null,[s[8]||(s[8]=i("li",null,"run: command binary or script name",-1)),s[9]||(s[9]=i("li",null,"args: optional arguments array",-1)),s[10]||(s[10]=i("li",null,[a("shell: run in a shell ("),i("code",null,"sh -lc"),a(" or "),i("code",null,"cmd /C"),a(") and pass args as a single string")],-1)),s[11]||(s[11]=i("li",null,"dir: working directory for the command",-1)),i("li",null,[s[0]||(s[0]=a("env: map of environment variables for the command (supports ",-1)),i("code",null,t(n.vars),1),s[1]||(s[1]=a(" and ",-1)),i("code",null,"$"+t(n.ENV),1),s[2]||(s[2]=a(")",-1))]),s[12]||(s[12]=i("li",null,"timeout_ms: default 30000",-1)),s[13]||(s[13]=i("li",null,"ignore_error: don’t fail the step if the command exits non‑zero",-1)),i("li",null,[s[3]||(s[3]=a("capture: ",-1)),s[4]||(s[4]=i("code",null,'{ var = "name" }',-1)),s[5]||(s[5]=a(" saves stdout to ",-1)),i("code",null,t(n.name),1),s[6]||(s[6]=a(" and stderr to ",-1)),i("code",null,t(n.name)+"_stderr",1)]),s[14]||(s[14]=i("li",null,[a("export: "),i("code",null,'{ var = "$.json.path" }'),a(" parse stdout as JSON and extract values into variables")],-1)),i("li",null,[s[7]||(s[7]=a("when: simple condition string, e.g. ",-1)),i("code",null,'"'+t(n.flag)+'" == "true"',1)]),s[15]||(s[15]=i("li",null,[a("on: only for "),i("code",null,"after"),a(" steps ("),i("code",null,"success"),a(", "),i("code",null,"failure"),a(", "),i("code",null,"always"),a(")")],-1))]),s[17]||(s[17]=l("",2))])}const y=e(k,[["render",o]]);export{F as __pageData,y as default};
