import{_ as t,c as a,o as i,ae as e}from"./chunks/framework.Bi6zybwU.js";const c=JSON.parse('{"title":"Creating Your First Test","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/first_test.md","filePath":"getting-started/first_test.md"}'),n={name:"getting-started/first_test.md"};function l(h,s,p,o,r,d){return i(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="creating-your-first-test" tabindex="-1">Creating Your First Test <a class="header-anchor" href="#creating-your-first-test" aria-label="Permalink to &quot;Creating Your First Test&quot;">​</a></h1><p>Creating your first test with Catalyst is straightforward. This guide will walk you through the process step by step.</p><h2 id="_1-create-the-directory-structure" tabindex="-1">1. Create the Directory Structure <a class="header-anchor" href="#_1-create-the-directory-structure" aria-label="Permalink to &quot;1. Create the Directory Structure&quot;">​</a></h2><p>First, create a <code>.catalyst</code> directory in your project root:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .catalyst</span></span></code></pre></div><h2 id="_2-create-the-test-file" tabindex="-1">2. Create the Test File <a class="header-anchor" href="#_2-create-the-test-file" aria-label="Permalink to &quot;2. Create the Test File&quot;">​</a></h2><p>Create a file named <code>tests.toml</code> inside the <code>.catalyst</code> directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .catalyst/tests.toml</span></span></code></pre></div><h2 id="_3-define-the-global-configuration" tabindex="-1">3. Define the Global Configuration <a class="header-anchor" href="#_3-define-the-global-configuration" aria-label="Permalink to &quot;3. Define the Global Configuration&quot;">​</a></h2><p>Open the <code>tests.toml</code> file and add the global configuration:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Replace with your API base URL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default_headers = { &quot;Content-Type&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h2 id="_4-add-your-first-test" tabindex="-1">4. Add Your First Test <a class="header-anchor" href="#_4-add-your-first-test" aria-label="Permalink to &quot;4. Add Your First Test&quot;">​</a></h2><p>Add a test definition to the file:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Simple GET Request&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/status&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><p>This test will make a GET request to <code>https://api.example.com/status</code> and expect a 200 status code in response.</p><h2 id="_5-complete-example" tabindex="-1">5. Complete Example <a class="header-anchor" href="#_5-complete-example" aria-label="Permalink to &quot;5. Complete Example&quot;">​</a></h2><p>Your complete <code>tests.toml</code> file should look like this:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default_headers = { &quot;Content-Type&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Simple GET Request&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/status&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you&#39;ve created your first test, learn how to <a href="./running_tests">run it</a>.</p>`,20)])])}const u=t(n,[["render",l]]);export{c as __pageData,u as default};
