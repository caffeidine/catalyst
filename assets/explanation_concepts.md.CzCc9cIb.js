import{_ as n,c as r,o as d,ae as t,j as a,a as s,t as i}from"./chunks/framework.Bi6zybwU.js";const m=JSON.parse('{"title":"Core Concepts","description":"","frontmatter":{},"headers":[],"relativePath":"explanation/concepts.md","filePath":"explanation/concepts.md"}'),c={name:"explanation/concepts.md"};function l(o,e,h,p,u,f){return d(),r("div",null,[e[4]||(e[4]=t('<h1 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h1><p>Understand the mental model behind Catalyst.</p><h2 id="declarative-tests-toml" tabindex="-1">Declarative tests (TOML) <a class="header-anchor" href="#declarative-tests-toml" aria-label="Permalink to &quot;Declarative tests (TOML)&quot;">​</a></h2><p>Tests are defined in TOML, not code. This makes suites readable, reviewable, and easy to share.</p><h2 id="configuration-and-defaults" tabindex="-1">Configuration and defaults <a class="header-anchor" href="#configuration-and-defaults" aria-label="Permalink to &quot;Configuration and defaults&quot;">​</a></h2><p><code>[config]</code> sets <code>base_url</code>, <code>default_headers</code>, and other defaults inherited by tests.</p><h2 id="variables-and-chaining" tabindex="-1">Variables and chaining <a class="header-anchor" href="#variables-and-chaining" aria-label="Permalink to &quot;Variables and chaining&quot;">​</a></h2>',7)),a("p",null,[e[0]||(e[0]=s("Extract values from responses and cookies to chain requests. Use ",-1)),e[1]||(e[1]=a("code",null,"store",-1)),e[2]||(e[2]=s(" to capture values and reference them with ",-1)),a("code",null,i(o.name),1),e[3]||(e[3]=s(" later.",-1))]),e[5]||(e[5]=t('<h2 id="assertions" tabindex="-1">Assertions <a class="header-anchor" href="#assertions" aria-label="Permalink to &quot;Assertions&quot;">​</a></h2><p>Validate responses via:</p><ul><li><code>expected_status</code>: Required status</li><li><code>expected_body</code>: Exact body match</li><li><code>assertions</code>: Flexible checks: <code>contains</code>, <code>regex</code>, <code>path_regex</code></li></ul><h2 id="performance-checks" tabindex="-1">Performance checks <a class="header-anchor" href="#performance-checks" aria-label="Permalink to &quot;Performance checks&quot;">​</a></h2><p><code>max_response_time</code> enforces an upper bound (ms). Catalyst also stores <code>response_time_ms</code> for subsequent tests.</p><h2 id="files-and-bodies" tabindex="-1">Files and bodies <a class="header-anchor" href="#files-and-bodies" aria-label="Permalink to &quot;Files and bodies&quot;">​</a></h2><p>Inline <code>body</code> for small payloads; use <code>body_file</code> for larger JSON files. Variables can be used in both.</p><p>Learn details in: <a href="./../reference/schema">Schema Reference</a> and <a href="./../reference/references">Test Reference</a>.</p>',8))])}const _=n(c,[["render",l]]);export{m as __pageData,_ as default};
