import{_ as i,c as t,o as r,ae as l,j as e,a as s}from"./chunks/framework.Bi6zybwU.js";const E=JSON.parse('{"title":"Variables Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference/variables.md","filePath":"reference/variables.md"}'),o={name:"reference/variables.md"};function n(c,a,d,h,u,k){return r(),t("div",null,[...a[0]||(a[0]=[l('<h1 id="variables-reference" tabindex="-1">Variables Reference <a class="header-anchor" href="#variables-reference" aria-label="Permalink to &quot;Variables Reference&quot;">​</a></h1><p>Catalyst substitutes variables in any string using <code>{{name}}</code>. Environment variables use <code>${{NAME}}</code>.</p><h2 id="sources" tabindex="-1">Sources <a class="header-anchor" href="#sources" aria-label="Permalink to &quot;Sources&quot;">​</a></h2><ul><li>CLI: <code>--var key=value,token=$TOKEN</code></li><li>Stored values: <code>store = { &quot;$.path&quot; = &quot;var&quot; }</code></li><li>Cookies: <code>get_cookie = { &quot;cookieName&quot; = &quot;var&quot; }</code></li><li>Environment: <code>${{ENV_NAME}}</code> in strings</li><li>Automatic: <ul><li><code>response_time_ms</code>: set after each test</li><li><code>header_&lt;name&gt;</code>: response headers (lowercased), e.g. <code>{{header_content-type}}</code></li></ul></li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2>',5),e("div",null,[e("div",{class:"language-toml vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"toml"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0","v-pre":""},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"endpoint = "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/users/{{user_id}}"')]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},'headers = { "Authorization" = '),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Bearer {{token}}"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},'body = { "content" = '),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"{{file:data/payload.txt}}"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")])])])])],-1)])])}const _=i(o,[["render",n]]);export{E as __pageData,_ as default};
