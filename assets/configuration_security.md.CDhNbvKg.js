import{_ as e,c as h,o as l,ae as n,j as i,a,t as p}from"./chunks/framework.Bi6zybwU.js";const g=JSON.parse('{"title":"Security Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"configuration/security.md","filePath":"configuration/security.md"}'),k={name:"configuration/security.md"};function o(t,s,E,r,d,u){return l(),h("div",null,[s[6]||(s[6]=n(`<h1 id="security-configuration" tabindex="-1">Security Configuration <a class="header-anchor" href="#security-configuration" aria-label="Permalink to &quot;Security Configuration&quot;">​</a></h1><p>This section explains how to configure authentication and security-related aspects when testing APIs with Catalyst.</p><h2 id="authentication-methods" tabindex="-1">Authentication Methods <a class="header-anchor" href="#authentication-methods" aria-label="Permalink to &quot;Authentication Methods&quot;">​</a></h2><p>Catalyst supports several authentication methods that can be configured in the global configuration section or per test.</p><h3 id="cookie-based-authentication" tabindex="-1">Cookie-based Authentication <a class="header-anchor" href="#cookie-based-authentication" aria-label="Permalink to &quot;Cookie-based Authentication&quot;">​</a></h3><p>The typical workflow for cookie-based authentication is:</p><ol><li>Perform a login request</li><li>Extract the session cookie</li><li>Use the cookie in subsequent requests</li></ol><p>Example:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Login&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/auth/login&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body = { &quot;username&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, &quot;password&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">get_cookie = { &quot;session_id&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;session_cookie&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Access Protected Resource&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/protected&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">headers = { &quot;Cookie&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;session_id={{session_cookie}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><h3 id="bearer-token-authentication" tabindex="-1">Bearer Token Authentication <a class="header-anchor" href="#bearer-token-authentication" aria-label="Permalink to &quot;Bearer Token Authentication&quot;">​</a></h3><p>Add an Authorization header via <code>default_headers</code> (global) or per-test <code>headers</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default_headers = { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;Content-Type&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;Authorization&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bearer {{API_TOKEN}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12)),i("p",null,[s[0]||(s[0]=a("You can pass ",-1)),s[1]||(s[1]=i("code",null,"API_TOKEN",-1)),s[2]||(s[2]=a(" via ",-1)),s[3]||(s[3]=i("code",null,"--var API_TOKEN=...",-1)),s[4]||(s[4]=a(" or use an environment variable with ",-1)),i("code",null,"$"+p(t.API_TOKEN),1),s[5]||(s[5]=a(" in values.",-1))]),s[7]||(s[7]=n(`<h2 id="handling-api-keys" tabindex="-1">Handling API Keys <a class="header-anchor" href="#handling-api-keys" aria-label="Permalink to &quot;Handling API Keys&quot;">​</a></h2><p>You can include API keys in headers or query parameters:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API Key in Header&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/protected&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">headers = { &quot;X-API-Key&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API Key in Query Parameter&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/protected&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">query_params = { &quot;api_key&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><h2 id="chaining-authentication" tabindex="-1">Chaining Authentication <a class="header-anchor" href="#chaining-authentication" aria-label="Permalink to &quot;Chaining Authentication&quot;">​</a></h2><p>You can chain authentication by extracting tokens from responses:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Create User Token&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/user/tokens&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">headers = { &quot;Cookie&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{session_cookie}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">store = { &quot;data.token&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Access Protected Resource&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/protected&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">headers = { &quot;x-api-token&quot; = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{token}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>For more information about test configuration and advanced features, see:</p><ul><li><a href="./../reference/schema">Schema Reference</a></li><li><a href="./../reference/references">Test Reference Index</a></li></ul>`,9))])}const y=e(k,[["render",o]]);export{g as __pageData,y as default};
