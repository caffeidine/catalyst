import{_ as e,c as h,o as p,ae as l,j as i,a,t}from"./chunks/framework.Bi6zybwU.js";const F=JSON.parse('{"title":"Command Hooks","description":"","frontmatter":{},"headers":[],"relativePath":"how-to/command_hooks.md","filePath":"how-to/command_hooks.md"}'),k={name:"how-to/command_hooks.md"};function o(n,s,d,E,r,u){return p(),h("div",null,[s[16]||(s[16]=l(`<h1 id="command-hooks" tabindex="-1">Command Hooks <a class="header-anchor" href="#command-hooks" aria-label="Permalink to &quot;Command Hooks&quot;">​</a></h1><p>Run shell commands before/after tests and at suite setup/teardown. Use hooks to seed data, generate tokens, or clean up.</p><h2 id="safety-allowed-commands" tabindex="-1">Safety: allowed_commands <a class="header-anchor" href="#safety-allowed-commands" aria-label="Permalink to &quot;Safety: allowed_commands&quot;">​</a></h2><p>Whitelist commands in <code>[config]</code> to prevent arbitrary execution:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allowed_commands = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;curl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="suite-level-hooks" tabindex="-1">Suite-level hooks <a class="header-anchor" href="#suite-level-hooks" aria-label="Permalink to &quot;Suite-level hooks&quot;">​</a></h2><p>Run once before all tests and once after all tests:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allowed_commands = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">run = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-lc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo seeding; ./scripts/seed.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timeout_ms = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">teardown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">run = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-lc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./scripts/cleanup.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ignore_error = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h2 id="test-level-hooks" tabindex="-1">Test-level hooks <a class="header-anchor" href="#test-level-hooks" aria-label="Permalink to &quot;Test-level hooks&quot;">​</a></h2><p>Each test can define <code>before</code> and <code>after</code> steps. <code>after</code> supports <code>on</code> to run on <code>success</code>, <code>failure</code>, or <code>always</code>.</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Create and verify&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endpoint = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/items&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body = { name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expected_status = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">201</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">run = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-lc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo START $(date +%s)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">capture = { var = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start_meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># saves stdout in {{start_meta}}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">run = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bash&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-lc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: 42, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ok</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">on = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # run only if HTTP test succeeded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">export = { item_id = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># parse stdout as JSON and export to {{item_id}}</span></span></code></pre></div><h2 id="step-fields" tabindex="-1">Step fields <a class="header-anchor" href="#step-fields" aria-label="Permalink to &quot;Step fields&quot;">​</a></h2>`,12)),i("ul",null,[s[8]||(s[8]=i("li",null,"run: command binary or script name",-1)),s[9]||(s[9]=i("li",null,"args: optional arguments array",-1)),s[10]||(s[10]=i("li",null,[a("shell: run in a shell ("),i("code",null,"sh -lc"),a(" or "),i("code",null,"cmd /C"),a(") and pass args as a single string")],-1)),s[11]||(s[11]=i("li",null,"dir: working directory for the command",-1)),i("li",null,[s[0]||(s[0]=a("env: map of environment variables for the command (supports ",-1)),i("code",null,t(n.vars),1),s[1]||(s[1]=a(" and ",-1)),i("code",null,"$"+t(n.ENV),1),s[2]||(s[2]=a(")",-1))]),s[12]||(s[12]=i("li",null,"timeout_ms: default 30000",-1)),s[13]||(s[13]=i("li",null,"ignore_error: don’t fail the step if the command exits non‑zero",-1)),i("li",null,[s[3]||(s[3]=a("capture: ",-1)),s[4]||(s[4]=i("code",null,'{ var = "name" }',-1)),s[5]||(s[5]=a(" saves stdout to ",-1)),i("code",null,t(n.name),1),s[6]||(s[6]=a(" and stderr to ",-1)),i("code",null,t(n.name)+"_stderr",1)]),s[14]||(s[14]=i("li",null,[a("export: "),i("code",null,'{ var = "$.json.path" }'),a(" parse stdout as JSON and extract values into variables")],-1)),i("li",null,[s[7]||(s[7]=a("when: simple condition string, e.g. ",-1)),i("code",null,'"'+t(n.flag)+'" == "true"',1)]),s[15]||(s[15]=i("li",null,[a("on: only for "),i("code",null,"after"),a(" steps ("),i("code",null,"success"),a(", "),i("code",null,"failure"),a(", "),i("code",null,"always"),a(")")],-1))]),s[17]||(s[17]=l("<p>Notes</p><ul><li>Conditions support <code>==</code> and <code>!=</code> comparisons after substitution.</li><li>Hooks honor <code>allowed_commands</code>; non-whitelisted commands fail validation/execution.</li><li>Use <code>--debug</code> to print hook execution and variable substitutions.</li></ul>",2))])}const y=e(k,[["render",o]]);export{F as __pageData,y as default};
